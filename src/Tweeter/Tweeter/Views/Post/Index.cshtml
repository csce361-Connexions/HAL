@model IEnumerable<Tweeter.Models.Post>
@{
    ViewBag.Title = "Index";
}
@{
    bool viewIrreplaceable = false;
    if(ViewBag.viewIrreplaceable != null){
        viewIrreplaceable = ViewBag.viewIrreplaceable;
    }
}
<div id="postList" class="@(viewIrreplaceable ? "irreplaceable" : "replaceable")">
    @if (!Model.Any())
    {
        <span class="message-error">Your query returned no results</span><br />
        @Html.ActionLink("Back", "Index", "Home");
    }
    <table>

        @foreach (var item in Model)
        {
            if(item.parent == null){
                @Html.Partial("_Post",item)
            }
        }
    </table>
</div>
<script type="text/javascript">
    var refreshInterval = window.setInterval(refreshPosts,10000)
    var canRefresh = true
    function commentClicked(id) {
        canRefresh = false
        //appear the box
        $("#commentBox" + id).show(500).find("input#postContent").focus()
    }
    function submitComment(id){

    }
    $(".commentBox input#postContent").on("blur", function () {
        //disappear the box
        var id = $(this).parent().attr("id")
        $("#"+id).hide(500)
        canRefresh = true
    })
    function refreshPosts() {
        if ($("#content-container").children(".irreplaceable").length == 0 && canRefresh){ 
            canRefresh=false;
            $.get("Post/Index", function (resp) {
                $("#content-container").empty().append(resp);
                canRefresh = true;
            })
        }
    }
    $("input#postContent").on('input', function () {
        //get the content length, subtract it from 200
        var length = $(this).val().length
        if (length >= 200) {
            $(this).val($(this).val().substr(0, 200));
            length = $(this).val().length
        }
        $(this).parent().siblings().find("#postCountdown").empty().append((200 - length) + " characters left")
    })
</script>
